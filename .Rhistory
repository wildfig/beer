molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "likes_count"] <- "Likes"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "shares_count"] <- "Shares"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for molson###
p <- molson %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
labatt <- labatt %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for Labatt
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "photo"] <- "Photo"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "video"] <- "Video"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "link"] <- "Link"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "status"] <- "Status"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "music"] <- "Music"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "event"] <- "Event"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "likes_count"] <- "Likes"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "shares_count"] <- "Shares"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for Labatt###
p <- labatt %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- labatt %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
molson <- molson %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for molson
molson$type <- as.character(molson$type)
molson$type[molson$type == "photo"] <- "Photo"
molson$type <- as.character(molson$type)
molson$type[molson$type == "video"] <- "Video"
molson$type <- as.character(molson$type)
molson$type[molson$type == "link"] <- "Link"
molson$type <- as.character(molson$type)
molson$type[molson$type == "status"] <- "Status"
molson$type <- as.character(molson$type)
molson$type[molson$type == "music"] <- "Music"
molson$type <- as.character(molson$type)
molson$type[molson$type == "event"] <- "Event"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "likes_count"] <- "Likes"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "shares_count"] <- "Shares"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for molson###
q <- molson %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(q)
q <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(q)
libs <- c('tidyr', 'broom', 'dplyr', 'ggplot2', 'ggfortify', 'tidytext', 'readr', 'stringr',
'jsonlite', 'Rfacebook', 'twitteR', 'lubridate', 'scales', 'wordcloud', 'SnowballC',
'tm', 'syuzhet', 'tidyr', 'xts')
lapply(libs, library, character.only = TRUE)
remove(libs)
# Load Data Files
filenames <- list.files(path = 'processed_data/', pattern = '*.RData', full.names = TRUE)
lapply(filenames, load, .GlobalEnv)
remove(filenames)
# Create name objects for looping
df_names <- c('labatt', 'molson', 'ultra', 'bud')
client_names <- c('Labatt_USA', 'Molson_Canadian', 'Michelob_ULTRA', 'budlight')
client_names_proper <- c('Labatt USA', 'Molson Canadian', 'Michelob ULTRA', 'Bud Light')
client_ids <- c(134391846723545, 424106561004308, 57921319808, 54876245094)
# Facebook Timestamp Creation
labatt$timestamp <- ymd_hms(labatt$created_time)
labatt$timestamp <- with_tz(labatt$timestamp, "America/New_York")
molson$timestamp <- ymd_hms(molson$created_time)
molson$timestamp <- with_tz(molson$timestamp, "America/New_York")
ultra$timestamp <- ymd_hms(ultra$created_time)
ultra$timestamp <- with_tz(ultra$timestamp, "America/New_York")
bud$timestamp <- ymd_hms(bud$created_time)
bud$timestamp <- with_tz(bud$timestamp, "America/New_York")
all_companies_ts <- rbind(labatt, molson, ultra, bud)
all_companies_ts <- subset(all_companies_ts, select = -c(message, created_time, link, id))
all_companies_ts$total_engagement <- rowSums(all_companies_ts[5:7])
all_companies_ts <- all_companies_ts %>%
filter(from_id %in% client_ids)
# Plot Functions
day_of_week <- function(df, client) {
r <- get(df) %>%
filter(from_id %in% client_ids)
ggplot(data = r, aes(x = wday(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") + expand_limits(y=c(0,160)) + scale_y_continuous(breaks = c(0, 40, 80, 120, 160)) +
xlab("Day of the Week") + ylab("Number of Posts") +
scale_fill_gradient(low = "midnightblue", high = "aquamarine4")
}
timeseries_engagement <- function(client) {
r <- all_companies_ts
r <- filter(r, from_name == client)
ggplot(data = r, aes(x = timestamp, y = total_engagement)) +
geom_line(size = 1) + expand_limits(y=c(0,1000)) +
scale_y_continuous(breaks = c(0, 200, 400, 600, 800, 1000))
}
# Create Vertical summary_stats for Labatt
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
labatt <- labatt %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for Labatt
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "photo"] <- "Photo"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "video"] <- "Video"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "link"] <- "Link"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "status"] <- "Status"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "music"] <- "Music"
labatt$type <- as.character(labatt$type)
labatt$type[labatt$type == "event"] <- "Event"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "likes_count"] <- "Likes"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "shares_count"] <- "Shares"
labatt$count_name <- as.character(labatt$count_name)
labatt$count_name[labatt$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for Labatt###
p <- labatt %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- labatt %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
# Create Vertical summary_stats for molson
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
molson <- molson %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for molson
molson$type <- as.character(molson$type)
molson$type[molson$type == "photo"] <- "Photo"
molson$type <- as.character(molson$type)
molson$type[molson$type == "video"] <- "Video"
molson$type <- as.character(molson$type)
molson$type[molson$type == "link"] <- "Link"
molson$type <- as.character(molson$type)
molson$type[molson$type == "status"] <- "Status"
molson$type <- as.character(molson$type)
molson$type[molson$type == "music"] <- "Music"
molson$type <- as.character(molson$type)
molson$type[molson$type == "event"] <- "Event"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "likes_count"] <- "Likes"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "shares_count"] <- "Shares"
molson$count_name <- as.character(molson$count_name)
molson$count_name[molson$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for molson###
q <- molson %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(q)
q <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(q)
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
budlight <- budlight %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for budlight
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "photo"] <- "Photo"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "video"] <- "Video"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "link"] <- "Link"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "status"] <- "Status"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "music"] <- "Music"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "event"] <- "Event"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "likes_count"] <- "Likes"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "shares_count"] <- "Shares"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for budlight###
p <- budlight %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- budlight %>%
filter(type != "Music") %>%
filter(from_name == "budlight") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
budlight <- budlight %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for budlight
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "photo"] <- "Photo"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "video"] <- "Video"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "link"] <- "Link"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "status"] <- "Status"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "music"] <- "Music"
budlight$type <- as.character(budlight$type)
budlight$type[budlight$type == "event"] <- "Event"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "likes_count"] <- "Likes"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "shares_count"] <- "Shares"
budlight$count_name <- as.character(budlight$count_name)
budlight$count_name[budlight$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for budlight###
p <- budlight %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- budlight %>%
filter(type != "Music") %>%
filter(from_name == "budlight") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
##Michelob Ultra
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
ultra <- ultra %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for ultra
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "photo"] <- "Photo"
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "video"] <- "Video"
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "link"] <- "Link"
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "status"] <- "Status"
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "music"] <- "Music"
ultra$type <- as.character(ultra$type)
ultra$type[ultra$type == "event"] <- "Event"
ultra$count_name <- as.character(ultra$count_name)
ultra$count_name[ultra$count_name == "likes_count"] <- "Likes"
ultra$count_name <- as.character(ultra$count_name)
ultra$count_name[ultra$count_name == "shares_count"] <- "Shares"
ultra$count_name <- as.character(ultra$count_name)
ultra$count_name[ultra$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for ultra###
p <- ultra %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "ultra") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
# Create Vertical summary_stats for bud
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
bud <- bud %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
# Plots for Engagement by Type for bud
bud$type <- as.character(bud$type)
bud$type[bud$type == "photo"] <- "Photo"
bud$type <- as.character(bud$type)
bud$type[bud$type == "video"] <- "Video"
bud$type <- as.character(bud$type)
bud$type[bud$type == "link"] <- "Link"
bud$type <- as.character(bud$type)
bud$type[bud$type == "status"] <- "Status"
bud$type <- as.character(bud$type)
bud$type[bud$type == "music"] <- "Music"
bud$type <- as.character(bud$type)
bud$type[bud$type == "event"] <- "Event"
bud$count_name <- as.character(bud$count_name)
bud$count_name[bud$count_name == "likes_count"] <- "Likes"
bud$count_name <- as.character(bud$count_name)
bud$count_name[bud$count_name == "shares_count"] <- "Shares"
bud$count_name <- as.character(bud$count_name)
bud$count_name[bud$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement for bud###
p <- bud %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- bud %>%
filter(type != "Music") %>%
filter(from_name == "bud") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson Canadian") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "Michelob Ultra") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
plot(p)
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "MichelobUltra") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "Michelob_Ultra") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "Michelob ULTRA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- bud %>%
filter(type != "Music") %>%
filter(from_name == "budlight") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- bud %>%
filter(type != "Music") %>%
filter(from_name == "Budlight") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- bud %>%
filter(type != "Music") %>%
filter(from_name == "Bud Light") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- ultra %>%
filter(type != "Music") %>%
filter(from_name == "Michelob ULTRA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson Canadian") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- labatt %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
p <- labatt %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
p <- labatt %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- labatt %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- molson %>%
filter(type != "Music") %>%
filter(from_name == "Molson Canadian") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
