weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
runif(10)
x <- runif(10)
summary(x)
hist(x)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
runif(10)
x <- runif(10)
summary(x)
plot(x)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
runif(10)
x <- runif(10)
y <- runif(20)
summary(x)
summary(y)
myString <- "Hello World!"
print (myString)
myString <- "Hello World!/n Hi"
print (myString)
v <- 23.5
print(class(v))
v <- 23.5
print(class(v))
v <- 23.5
print(class(v))
c <- "Hello!"
print(class(c))
v <- 23.5
print(class(v))
c <- "Hello!"
print(class(c))
x <-'blah'
print(class(x))
u <- x + 7
print(class(u))
v <- 23.5
print(class(v))
c <- "Hello!"
print(class(c))
x <-'blah'
print(class(x) + class(c))
v <- 23.5
print(class(v))
c <- "Hello!"
print(class(c))
x <-'blah'
print(class(x) & class(c))
v <- 23.5
print(class(v))
c <- "Hello!"
print(class(c))
x <-'blah'
print(class(x) && class(c))
var x <- 23.5
print(class(x))
x <- 23.5
print(class(x))
x <- seq(22,34)
print(x)
age (years) <- c(1, 2, 3, 4, 5, 6, 7, 8)
height (inches) <- c(20, 22, 24, 26, 28, 30)
plot(age, height)
age (years) <- c(1, 2, 3, 4, 5, 6, 7, 8)
height (inches) <- c(20, 22, 24, 26, 28, 30)
plot(age (years), height (inches))
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30)
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32)
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
scatterplot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
title("Hello World!")
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
title("Hello World!")
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
title("Hello World!")
plot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
title("Hello World!")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
title("Hello World!")
abline(lm(age~height))
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
title("Hello World!")
abline(lm(age~height))
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
abline(lm(age~height))
plot(age, height)
title("Hello World!")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
abline(lm(age~height))
title("Hello World!")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
ggplot(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
abline(lm(age~height))
title("*Insert Title Here*")
install.packages("ggplot2")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
ggplot(age, height)
ggplot2(age, height)
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
qplot(age, height, geom="jitter")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
qplot(age, height, geom="jitter")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height, geom="jitter")
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
title("*Insert Title Here*")
print(sum(34:101))
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
x <- summary
summary(x)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
print(mean)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
print(mean)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1, 6.1)
mean(weight)
median(weight)
mode(weight)
options(digits=3)
age <-c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4, 10.2, 6.1)
# Mean/Median -------------------------------------------------------------
mean(weight)
median(weight)
mean(weight)
median(weight)
options(digits=3) "Results only contain 3 digigits"
options(digits=3)
myString <- "Hello World"
print (myString)
x <- 23.5
print(class(x))
x <- seq(22,34)
print(x)
print(sum(34:101))
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
mean(weight)
median(weight)
options(digits=3)
# Results limited to 3 significant digits
mean(weight)
median(weight)
options(digits=3)
# Results limited to 3 significant digits
# Notice how results are limited to 3 significant digits
age <- c(1, 2, 3, 4, 5, 6, 7, 8)
height <- c(20, 22, 24, 26, 28, 30, 32, 34)
plot(age, height)
title("*Insert Title Here*")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(information)
title("Here is an example of a Histogram! YAY!")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
title("Here is an example of a Histogram! YAY!")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
title("Here is an example of a Histogram! YAY!")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
title("YAY!")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
title("YAY!")
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
# Histogram ---------------------------------------------------------------
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
color(red)
Information <- c(2.3, 2.3, 2.3, 1, 1, 4, 4.2, 4.2, 4, 4, 5.1)
hist(Information)
5 + 3
x <- 5 + 3
print(x)
1:203
print("Hello World!")
x <- 1:5 #Put the numbers 1-5 in the variable x
print(x)
x <- 1:5 #Put the numbers 1-5 in the variable x
print(x)
x
y
y <- c(6, 7, 8, 9, 10) #manually puts numbers 6-10 in y
y
y -> c(6, 7, 8, 9, 10) #manually puts numbers 6-10 in y
y
y <- c(6, 7, 8, 9, 10) #manually puts numbers 6-10 in y
y
a <- b <- n <- c(2, 2, 2)
a
b
n
x <- 1:5 #Put the numbers 1-5 in the variable x
print(x)
x
y <- c(6, 7, 8, 9, 10) #manually puts numbers 6-10 in y
y
#vector math
x + y
x + y
x*2
rm(x)
browseURL(www.google.com)
browseURL("http://www.google.com")
library()
library()
search()
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
require("ggplot2")
browseURL("http://www.google.com")
?datasets
data()
srt(HairEyeColor)
str(HairEyeColor)
?HairEyeColor
plot(HairEyeColor)
rm(list = ls() )
x <- 0:10
x
x2 <- 10:0
x2
x3 <- seq(10)
x3
?seq
x4
x4
x4
x4 <- seq(30, 0, by = -3)
x4
x5
x5 <- c(5, 4, 1, 6, 7)
x5
x6 <- scan()
x6
ls()
rm(list = ls())
x4 <- seq(30, 0, by = -3)
x4
x5
x5 <- c(5, 4, 1, 6, 7)
x5
x6
x6 <- scan() #Enter data into the console
rm(list=ls())
rm(list=ls()) #To clean up, run this command and push CTRL + L
str(UCBAdmissions)
UCBAdmissions
barplot(UCBAdmissions)
plot(UCBAdmissions)
margin.table(UCBAdmissions, 1)
plot(margin.table(UCBAdmissions, 1))
plot(margin.table(UCBAdmissions, 1))
margin.table((UCBAdmissions, 2))
margin.table(UCBAdmissions, 2)
margin.table(UCBAdmissions, 3)
margin.table(UCBAdmissions)
barplot(admit.dept)
admit.dept <- margin.table(UCBAdmissions, 3)
str(admit.dept)
admit.dept <- margin.table(UCBAdmissions, 3)
str(admit.dept)
barplot(admit.dept)
round(prop.table(admit.dept), 2)
round(prop.table(admit.dept), 2)*100
hist(admit.dept)
barplot(admit.dept)
rm(list=ls()) #To clean up, run this command and push CTRL + L
barplot(x)
x <- c(12, 4, 21, 17, 13, 9)
barplot(x)
title("Color Example")
colors()
barplot(x, col = 183)
barplot(x, col = 619)
title("Color Example")
barplot(x, col = 602)
barplot(x, col = colors()[602])
barplot(x, col = colors()[488])
barplot(x, col = colors()[1])
barplot(x, col = colors()[100])
barplot(x, col = "navyblue"")
barplot(x, col = "navyblue"")
barplot(x, col = "navyblue")
setwd("~/R Code/beer")
libs <- c('tidyr', 'broom', 'dplyr', 'ggplot2', 'ggfortify', 'tidytext', 'readr', 'stringr',
'jsonlite', 'Rfacebook', 'twitteR', 'lubridate', 'scales', 'wordcloud', 'SnowballC',
'tm', 'syuzhet', 'tidyr', 'xts')
lapply(libs, library, character.only = TRUE)
remove(libs)
filenames <- list.files(path = 'processed_data/', pattern = '*.RData', full.names = TRUE)
lapply(filenames, load, .GlobalEnv)
remove(filenames)
df_names <- c('labatt', 'molson', 'ultra', 'bud')
client_names <- c('Labatt_USA', 'Molson_Canadian', 'Michelob_ULTRA', 'budlight')
client_names_proper <- c('Labatt USA', 'Molson Canadian', 'Michelob ULTRA', 'Bud Light')
client_ids <- c(134391846723545, 424106561004308, 57921319808, 54876245094)
labatt$timestamp <- ymd_hms(labatt$created_time)
labatt$timestamp <- with_tz(labatt$timestamp, "America/New_York")
molson$timestamp <- ymd_hms(molson$created_time)
molson$timestamp <- with_tz(molson$timestamp, "America/New_York")
ultra$timestamp <- ymd_hms(ultra$created_time)
ultra$timestamp <- with_tz(ultra$timestamp, "America/New_York")
bud$timestamp <- ymd_hms(bud$created_time)
bud$timestamp <- with_tz(bud$timestamp, "America/New_York")
all_companies_ts <- rbind(labatt, molson, ultra, bud)
all_companies_ts <- subset(all_companies_ts, select = -c(message, created_time, link, id))
all_companies_ts$total_engagement <- rowSums(all_companies_ts[5:7])
all_companies_ts <- all_companies_ts %>%
filter(from_id %in% client_ids)
# Plot Functions
day_of_week <- function(df, client) {
ggplot(data = get(df), aes(x = wday(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") + expand_limits(y=c(0,160)) + scale_y_continuous(breaks = c(0, 40, 80, 120, 160)) +
xlab("Day of the Week") + ylab("Number of Posts") +
scale_fill_gradient(low = "midnightblue", high = "aquamarine4")
}
timeseries_engagement <- function(client) {
r <- all_companies_ts
r <- filter(r, from_name == client)
ggplot(data = r, aes(x = timestamp, y = total_engagement)) +
geom_line(size = 1) + expand_limits(y=c(0,1000)) +
scale_y_continuous(breaks = c(0, 200, 400, 600, 800, 1000))
}
summary_stats <- gather(summary_stats, Engagement, Number, Comments:Total.Posts)
all_engagement <- all_companies %>%
select(from_name, type, likes_count, comments_count, shares_count) %>%
gather(count_name, value, likes_count:shares_count)
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "photo"] <- "Photo"
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "video"] <- "Video"
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "link"] <- "Link"
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "status"] <- "Status"
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "music"] <- "Music"
all_engagement$type <- as.character(all_engagement$type)
all_engagement$type[all_engagement$type == "event"] <- "Event"
all_engagement$count_name <- as.character(all_engagement$count_name)
all_engagement$count_name[all_engagement$count_name == "likes_count"] <- "Likes"
all_engagement$count_name <- as.character(all_engagement$count_name)
all_engagement$count_name[all_engagement$count_name == "shares_count"] <- "Shares"
all_engagement$count_name <- as.character(all_engagement$count_name)
all_engagement$count_name[all_engagement$count_name == "comments_count"] <- "Comments"
### Matrix Content Engagement ###
p <- all_engagement %>%
filter(type != "Music") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
p <- all_engagement %>%
filter(type != "Music") %>%
filter(from_name == "Labatt USA") %>%
ggplot(., aes(x = type, y = count_name)) +
stat_sum(aes(group = value, color = type)) + scale_size(range = c(5, 15)) +
xlab("Post Content Type") + ylab("Engagement Type") +
coord_flip() + theme(text = element_text(size=20))
plot(p)
### Matrix Content Engagement ###
p <- summary_stats %>%
filter(Engagement != "Total.Posts") %>%
ggplot(., aes(x = Company, y = Number, fill = Engagement)) +
geom_bar(stat = "identity") +
xlab("") + ylab("") +
coord_flip()
plot(p)
p <- summary_stats %>%
filter(Engagement != "Total.Posts") %>%
ggplot(., aes(x = Company, y = Number, fill = Engagement)) +
geom_bar(stat = "identity") +
xlab("") + ylab("") +
coord_flip()
plot(p)
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
}
# Create Plots for Time Series
for(i in seq_along(df_names)) {
p <- timeseries_engagement(client_names_proper[i])
plot(p)
}
# Create Plots for Day Of Week
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
}
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
}
ggtitle("TEST")
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
ggtitle("TEST")
}
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
title("TEST")
}
for(i in seq_along(df_names)) {
p <- day_of_week(df_names[i], client_names[i])
plot(p)
}
title("TEST")
# Wordclouds
molson$timestamp <- date(molson$timestamp)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
# Wordclouds
molson$timestamp <- date(molson$timestamp)
